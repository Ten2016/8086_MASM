;***************************
;PROJECT:输出大于0/小于0/等于0的个数
;NAME:滕佳禄
;DATE:2018.4.7
;UPDATE:
;4.15 添加显示日期时间
;4.18 添加防止输入错误
;4.20 将输入位数降为两位数
;	  单页只能显示这么多,没必要换页
;4.24 将黑白文本显示改为彩色文本显示(改动比较大)
;	  说明:用BIOS中断显示字符时不会改变光标位置
;4.26 优化简化(关键点:修改光标移动方式)
;***************************
STACK	SEGMENT STACK
		DW 100H DUP(?)
TOP		LABEL WORD
STACK	ENDS
DATA	SEGMENT
;************************
GREATZ	DB 00H
ZERO	DB 00H
LITTLEZ DB 00H
X1CNT	DB 00H	;十六进制显示X轴坐标
X2CNT	DB 00H	;  十进制显示X轴坐标
YCNT	DB 00H	;Y轴坐标
;字符串变量
SG	DB 'great  Z: $'
SZ	DB 'equal  Z: $'
SL	DB 'little Z: $'
SHEX DB 'Hex: $'
SDIG DB 'Dig: $'
SNUM  DB 'Num : 16073212$'
SNAME DB 'Name: Teng Jia Lu$'
SDATE  DB 'Date: $'
STIME  DB 'Time: $'
;数字集
BUFFER	DB 20, 1, 3,  4,5,-2, 0,4,-7, 0,-88,-6,  0,  4,0,12,-12,  5,0,66,-7	;9,5,6
BUFFER1	DB 20,65,34,-23,1, 0,-4,0, 0,45,-67, 8,-56,-34,0,67,  2,-45,0,37,0	;8,6,6
BUFFER2	DB 40H		;产生64个伪随机数
	X = 17
	REPT 40H
	X = (X+41)MOD 23 - 11
	DB X
	ENDM
;************************
DATA	ENDS
CODE	SEGMENT
		ASSUME CS:CODE,DS:DATA,ES:DATA,SS:STACK
;************************
;******define******
;TOXY
;移动光标至指定位置
;input:
;	X:X坐标
;	Y:Y坐标
TOXY	MACRO X,Y
	PUSH AX
	PUSH DX
	MOV AH,02H
	MOV DH,X
	MOV DL,Y
	INT 10H
	POP DX
	POP AX
	ENDM
;DPSTR
;输出字符串
;input:STRING 字符串头位置
;output:输出字符串
DPSTR	MACRO STRING
	PUSH AX
	PUSH DX
	MOV AH,09H
	LEA DX,STRING	;[DS已经指向此数据段]
	INT 21H
	POP DX
	POP AX
	ENDM
;DPASCII
;输出字符
;input:
;	CHAR 字符(AL)
;	MODE 字符属性(BL)
;	NUM  重复次数(CX)
;output:显示字符
DPASCII	MACRO CHAR,MODE,NUM
	PUSH AX
	PUSH BX
	PUSH CX
;以下数据载入寄存器
;必须将char最先装入,否则可能会被覆盖
	MOV AL,CHAR	;字符的ASCII值
	MOV AH,09H
	XOR BH,BH	;页号置为0(第一页)
	MOV BL,MODE	;字符类型(闪烁1,背景3,前景4)
	MOV CX,NUM	;字符重复次数
	INT 10H		
	POP CX
	POP BX
	POP AX
	ENDM
;************************
START:
	MOV AX,DATA
	MOV DS,AX
	MOV ES,AX
	MOV AX,STACK
	MOV SS,AX
	LEA SP,TOP
;********************
	MOV AX,03H
	INT 10H		;清屏(80*25彩色文本模式)
;从键盘读入数字(最多三位数即可)
	MOV BL,0AH
	XOR DX,DX
MOV CX,03H
;原理 y=10*(10*(10*x4+x3)+x2)+x1
READ:
	MOV AH,01H
	INT 21H
	CMP AL,0DH		;判断是否输入回车
	JZ READ_END		;输入回车则退出输入
	XOR AH,AH
	SUB AL,30H
	PUSH AX			;保存输入数字
	MOV AX,DX		;将上次结果存入AX
	MUL BL			;上次结果×10
	MOV DX,AX		;将相乘的结果存入DX
	POP AX			;将输入数字取出
	ADD DX,AX		;相加
LOOP READ
READ_END:
	CMP DX,00H
	JNZ NUM_NOCHG
	MOV DX,20		;等于0则置为20
NUM_NOCHG:
	CMP DX,60
	JBE NUM_OK
	MOV DX,60		;大于60则置为60
NUM_OK:		;对输入数字进行修正
	MOV AX,03H
	INT 10H		;清屏(80*25彩色文本模式)
	TOXY 00H,00H
	MOV AX,DX
	CALL DPALD
;对显示数据进行预处理
	LEA SI,BUFFER+1
	MOV X1CNT,01H
	MOV X2CNT,02H
	MOV YCNT,00H
	TOXY X1CNT,YCNT
	DPSTR SHEX
	TOXY X2CNT,YCNT
	DPSTR SDIG
	ADD YCNT,06H	;移动光标
;数据显示
ST_COUNT:
	MOV AL,[SI]
	TOXY X1CNT,YCNT
;显示十六进制(无闪烁青色黑背景)
	 CALL DPALH
;移动光标和十六进制显示对齐
	DEC YCNT
	TOXY X2CNT,YCNT
;显示十进制(无闪烁红色黑背景)
	CMP AL,00H			;判断该数是否大于0
	JGE GREATZ_EQUALZ
	DEC AL
	NOT AL				;减1取反
	DEC YCNT
	TOXY X2CNT,YCNT
	DPASCII '-',04H,01H	;显示负号
	INC YCNT
	TOXY X2CNT,YCNT
	INC LITTLEZ			;小于0计数加1
	JMP FINALLY
GREATZ_EQUALZ:
	AND AL,AL
	JZ EQUALZ			;判断该数是否等于0
	INC GREATZ			;大于0计数加1
	JMP FINALLY
EQUALZ:
	INC ZERO			;等于0计数加1	
FINALLY:
;显示十进制(无闪烁红色黑背景)
	CALL DPALD
	INC SI
	DEC DX
	JZ JMP_BREAK	;等于0直接跳出
	ADD YCNT,04H	;由于输出两位数时光标向后移动了移位,此处少移动一位
	CMP YCNT,42H	;65(12*5+5)
	JB  NCHG_LINE	;不需要换行
	ADD X1CNT,03H
	ADD X2CNT,03H
	MOV YCNT,06H	;移动光标	
NCHG_LINE:
	JMP ST_COUNT
JMP_BREAK:
;	LOOP ST_COUNT	由于中间代码较多,loop无法跳转
	
	ADD X2CNT,03H
	TOXY X2CNT,00H
	DPSTR SG
	MOV YCNT,0AH
	TOXY X2CNT,YCNT
	MOV AL,GREATZ
	CALL DPALD	;显示大于0的个数
	INC X2CNT
	TOXY X2CNT,00H
	DPSTR SZ
	MOV YCNT,0AH
	TOXY X2CNT,YCNT
	MOV AL,ZERO
	CALL DPALD	;显示等于0的个数
	INC X2CNT
	TOXY X2CNT,00H
	DPSTR SL
	MOV YCNT,0AH
	TOXY X2CNT,YCNT
	MOV AL,LITTLEZ
	CALL DPALD	;显示小于0的个数
;姓名学号
	ADD X2CNT,01H
	TOXY X2CNT,30H
	DPSTR SNUM
	INC X2CNT
	TOXY X2CNT,30H
	DPSTR SNAME
;日期
	INC X2CNT
	MOV YCNT,30H
	TOXY X2CNT,YCNT
	DPSTR SDATE
	MOV AH,2AH
	INT 21H		;取日期
;显示日期;
	ADD YCNT,06H
	TOXY X2CNT,YCNT
	MOV AX,CX	;年
	CALL DPAXD
	DPASCII '-',02H,01H	;横线
	INC YCNT
	TOXY X2CNT,YCNT
	MOV AL,DH	;月
	CALL DPALD
	INC YCNT
	TOXY X2CNT,YCNT
	DPASCII '-',02H,01H	;横线
	INC YCNT
	TOXY X2CNT,YCNT
	MOV AL,DL	;日
	CALL DPALD	
;时间
	INC X2CNT
	MOV YCNT,30H
	TOXY X2CNT,YCNT
	DPSTR STIME
	MOV AH,2CH
	INT 21H		;取时间
;显示时间
	ADD YCNT,06H
	TOXY X2CNT,YCNT
	MOV AL,CH	;时
	CALL DPALD
	INC YCNT
	TOXY X2CNT,YCNT
	DPASCII ':',82H,01H	;冒号
	INC YCNT
	TOXY X2CNT,YCNT
	MOV AL,CL	;分
	CALL DPALD
	INC YCNT
	TOXY X2CNT,YCNT
	DPASCII ':',82H,01H;冒号
	INC YCNT
	TOXY X2CNT,YCNT
	MOV AL,DH	;秒
	CALL DPALD
;返回DOS
	MOV AH,4CH
	INT 21H
;************************
;******functions******
;DPALD
;显示十进制两位数
;input AL
;output 显示该两位数
DPALD	PROC NEAR
	PUSH AX
	PUSH BX
	XOR AH,AH
	MOV BL,0AH
	DIV BL
	ADD AL,30H	;十位(商)
	DPASCII AL,04H,01H
	INC YCNT
	TOXY X2CNT,YCNT
	ADD AH,30H	;个位(余数)
	DPASCII AH,04H,01H
	POP BX
	POP AX
	RET
DPALD	ENDP
;以十进制显示16位二进制数
;无前导0,不占位
;input: AX
;output:显示此数字
DPAXD PROC NEAR
	PUSH BX
	PUSH CX
	PUSH DX
	MOV BX,0AH	;装入10
	XOR DX,DX	
MOV CX,05H
MM:	
	DIV BX		;除以10
	PUSH DX		;保存余数
	XOR DX,DX	;清空DX
LOOP MM
	MOV BX,00H	;是否为前导0标志(eg:00102)
MOV CX,05H
NN:		
	POP DX		;取出保存的位数
	ADD DL,30H	;转为ASCII值
	CMP BX,01H	;判断是否为前导0
	JZ NODFZ
	CMP DL,30H	;判断是否为0
	JZ NODISP	;是的话转到不显示
	MOV BX,01H	;不是0则标志置1
NODFZ:
	DPASCII DL,04H,01H
	INC YCNT
	TOXY X2CNT,YCNT
NODISP:
LOOP NN
	POP DX
	POP CX
	POP BX
	RET
DPAXD	ENDP
;DPALH
;显示十六进制两位数
;input:AX
;output:显示此数字
DPALH PROC NEAR
	PUSH AX
	PUSH CX
	PUSH AX
	XOR AH,AH
	MOV CL,04H
	SHR AL,CL	;将高4位移到低4位
	CMP AL,0AH
	JNGE CHG1
	ADD AL,07H	;加37H转为ASCII的大写字母字符
CHG1:
	ADD AL,30H	;加30H转为ASCII的数字字符
	DPASCII AL,03H,01H
	INC YCNT
	TOXY X1CNT,YCNT
	POP AX
	AND AL,0FH	;将高4位置0
	CMP AL,0AH
	JNGE CHG2
	ADD AL,07H	;加37H转为ASCII的大写字母字符
CHG2:
	ADD AL,30H	;加30H转为ASCII的数字字符
	DPASCII AL,03H,01H
	POP CX
	POP AX
	RET
DPALH ENDP
;********************
CODE	ENDS
	END START

	
;颜色表
;寄存器:BL
;D7   :闪烁选择
;D6-D4:背景色
;D3-D0:前景色
;闪烁选择：
; 0 不闪烁	1 闪烁
;背景色:
;	000		黑		100		红
;	001		蓝		101		品红
;	010		绿		110		棕
;	011		青		111		白
;前景色:
;	0000	黑		1000	灰
;	0001	蓝		1001	浅灰
;	0010	绿		1010	浅绿
;	0011	青		1011	浅青
;	0100	红		1100	浅红
;	0101	品红	1101	浅品红
;	0110	棕		1110	黄
;	0111	白		1111	强度白
;
